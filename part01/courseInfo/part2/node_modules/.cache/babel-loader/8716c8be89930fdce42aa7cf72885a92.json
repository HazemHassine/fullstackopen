{"ast":null,"code":"var _jsxFileName = \"/home/hazem/fullstackopen/part01/part2/src/App.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = props => {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: props.course\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Header;\n\nconst Part = props => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [props.name, \" \", props.exercises]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Part;\n\nconst Content = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Part, {\n      name: props.parts[0].name,\n      exercises: props.parts[0].exercises\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Part, {\n      name: props.parts[2].name,\n      exercises: props.parts[2].exercises\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Part, {\n      name: props.parts[1].name,\n      exercises: props.parts[1].exercises\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Content;\n\nconst Total = props => {\n  let total = 0;\n\n  for (let i = 0; i < props.parts.length; i++) {\n    total += props.parts[i].exercises;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Number of exercises \", total]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n};\n\n_c4 = Total;\n\nconst App = () => {\n  var _s = $RefreshSig$();\n\n  const App = () => {\n    _s();\n\n    const [clicks, setClicks] = useState({\n      left: 0,\n      right: 0\n    });\n\n    const handleLeftClick = () => {\n      const newClicks = {\n        left: clicks.left + 1,\n        right: clicks.right\n      };\n      setClicks(newClicks);\n    };\n\n    const handleRightClick = () => {\n      const newClicks = {\n        left: clicks.left,\n        right: clicks.right + 1\n      };\n      setClicks(newClicks);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [clicks.left, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLeftClick,\n        children: \"left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRightClick,\n        children: \"right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), clicks.right]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  };\n  /*\n  Now the component only has a single piece of state and the event handlers have to take care of changing the entire application state.\n  \n  The event handler looks a bit messy. When the left button is clicked, the following function is called:\n  */\n\n\n  _s(App, \"wJ6HpA5k6URRlsGgEbjz2PxNnoo=\");\n\n  const handleLeftClick = () => {\n    const newClicks = {\n      left: clicks.left + 1,\n      right: clicks.right\n    };\n    setClicks(newClicks);\n  };\n};\n\n_c5 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Part\");\n$RefreshReg$(_c3, \"Content\");\n$RefreshReg$(_c4, \"Total\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"sources":["/home/hazem/fullstackopen/part01/part2/src/App.js"],"names":["React","Header","props","course","Part","name","exercises","Content","parts","Total","total","i","length","App","clicks","setClicks","useState","left","right","handleLeftClick","newClicks","handleRightClick"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nconst Header = (props) => {\n  return <h1>{props.course}</h1>;\n};\nconst Part = (props) => {\n  return (\n    <p>\n      {props.name} {props.exercises}\n    </p>\n  );\n};\nconst Content = (props) => {\n  return (\n    <div>\n      <Part name={props.parts[0].name} exercises={props.parts[0].exercises} />\n      <Part name={props.parts[2].name} exercises={props.parts[2].exercises} />\n      <Part name={props.parts[1].name} exercises={props.parts[1].exercises} />\n    </div>\n  );\n};\nconst Total = (props) => {\n  let total = 0;\n  for (let i = 0; i < props.parts.length; i++) {\n    total += props.parts[i].exercises;\n  }\n  return <p>Number of exercises {total}</p>;\n};\n\nconst App = () => {\n  const App = () => {\n    const [clicks, setClicks] = useState({\n      left: 0, right: 0\n    })\n  \n    const handleLeftClick = () => {\n      const newClicks = { \n        left: clicks.left + 1, \n        right: clicks.right \n      }\n      setClicks(newClicks)\n    }\n  \n    const handleRightClick = () => {\n      const newClicks = { \n        left: clicks.left, \n        right: clicks.right + 1 \n      }\n      setClicks(newClicks)\n    }\n  \n    return (\n      <div>\n        {clicks.left}\n        <button onClick={handleLeftClick}>left</button>\n        <button onClick={handleRightClick}>right</button>\n        {clicks.right}\n      </div>\n    )\n  }\n  /*\n  Now the component only has a single piece of state and the event handlers have to take care of changing the entire application state.\n  \n  The event handler looks a bit messy. When the left button is clicked, the following function is called:\n  */\n  const handleLeftClick = () => {\n    const newClicks = { \n      left: clicks.left + 1, \n      right: clicks.right \n    }\n    setClicks(newClicks)\n  }\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}